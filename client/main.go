package main

import (
	"encoding/binary"
	"fmt"
	"net"
	"os"
)

const (
	SERVER_PORT = "20000" // ‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏Ç‡∏≠‡∏á server ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ
)

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™ header ‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß
func decodeHeader(encodedHeader string) (topic uint32, messageLength uint32, err error) {
	// ‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏ï‡∏£‡∏¥‡∏á‡πÄ‡∏õ‡πá‡∏ô []byte
	headerBytes := []byte(encodedHeader)

	// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏Ç‡∏≠‡∏á header
	if len(headerBytes) < 8 {
		return 0, 0, fmt.Errorf("header ‡∏™‡∏±‡πâ‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ: ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ 8 bytes ‡πÅ‡∏ï‡πà‡πÑ‡∏î‡πâ %d bytes", len(headerBytes))
	}

	// ‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™ topic ‡πÅ‡∏•‡∏∞ messageLength
	topic = binary.LittleEndian.Uint32(headerBytes[0:4])
	messageLength = binary.LittleEndian.Uint32(headerBytes[4:8])

	return topic, messageLength, nil
}

func main() {
	// ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á server
	conn, err := net.Dial("tcp", "localhost:"+SERVER_PORT)
	if err != nil {
		fmt.Println("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö server ‡πÑ‡∏î‡πâ:", err)
		os.Exit(1)
	}
	defer conn.Close()

	fmt.Println("üîó ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö server ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

	for {
		// ‡∏≠‡πà‡∏≤‡∏ô header (8 bytes)
		header := make([]byte, 8)
		_, err := conn.Read(header)
		if err != nil {
			fmt.Println("‚ùå ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î:", err)
			break
		}

		// ‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™ header
		topic, messageLength, err := decodeHeader(string(header))
		if err != nil {
			fmt.Println("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™ header ‡πÑ‡∏î‡πâ:", err)
			continue
		}

		fmt.Printf("\nüì• ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Topic: %d, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: %d bytes\n", topic, messageLength)

		// ‡∏≠‡πà‡∏≤‡∏ô XML message
		message := make([]byte, messageLength)
		_, err = conn.Read(message)
		if err != nil {
			fmt.Println("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° XML ‡πÑ‡∏î‡πâ:", err)
			break
		}

		// ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô UTF-16LE
		xmlMessage := string(message)
		fmt.Printf("üìú ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° XML: %s\n", xmlMessage)
	}
}
